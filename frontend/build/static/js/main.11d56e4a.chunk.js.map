{"version":3,"sources":["logo.svg","components/Users.js","components/Project.js","components/UserProject.js","components/Todo.js","components/Menu.js","components/Footer.js","components/LoginForm.js","components/ProjectForm.js","components/TodoForm.js","App.js","reportWebVitals.js","index.js"],"names":["UserItem","user","username","first_name","last_name","to","id","email","UserList","users","map","ProjectItem","project","deleteProject","name","userId","find","link_rep","onClick","type","ProjectList","UserProjectList","useParams","filtered_projects","filter","includes","parseInt","TodoItem","todo","deleteTodo","text","TodoList","MenuList","menu","Footer","footer","LoginForm","props","state","event","this","setState","target","value","get_token","login","password","preventDefault","onSubmit","handleSubmit","placeholder","onChange","handleChange","React","Component","ProjectForm","selectedOptions","i","length","push","item","createProject","multiple","handleUserChange","TodoForm","createTodo","handleProjectChange","Page404","location","pathname","App","token","cookie","Cookies","get","get_data","header","headers","get_headers","axios","then","response","data","results","catch","error","console","log","array_data_is_active","is_active","post","set","get_token_from_storage","delete","className","is_auth","logout","Menu","exact","path","component","Project","Todo","UserProject","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11d56e4a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst UserItem = ({user}) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {user.username}\r\n            </td>\r\n            <td>\r\n                {user.first_name}\r\n            </td>\r\n            <td>\r\n                {user.last_name}\r\n            </td>\r\n            <td>\r\n                <Link to={`user/${user.id}`}>{user.email}</Link>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst UserList = ({users}) => {\r\n    return (\r\n        <table>\r\n            <th>\r\n                Username\r\n            </th>\r\n            <th>\r\n                Firstname\r\n            </th>\r\n            <th>\r\n                Lastname\r\n            </th>\r\n            <th>\r\n                Email\r\n            </th>\r\n            {users.map((user) => <UserItem user={user}/>)}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default UserList","import React from 'react'\r\n\r\nconst ProjectItem = ({project, users, deleteProject}) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {project.id}\r\n            </td>\r\n            <td>\r\n                {project.name}\r\n            </td>\r\n            <td>\r\n                {project.users.map((userId) => {\r\n                    let user = users.find((user) => user.id == userId)\r\n                    if (user) {\r\n                        return user.email + ' '\r\n                    }\r\n                })\r\n                }\r\n\r\n            </td>\r\n            <td>\r\n                {project.link_rep}\r\n            </td>\r\n            <td>\r\n                <button onClick={() => deleteProject(project.id)} type='button'>Delete</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst ProjectList = ({project, users, deleteProject}) => {\r\n    return (\r\n        <table>\r\n            <th>\r\n                Id\r\n            </th>\r\n            <th>\r\n                Name\r\n            </th>\r\n            <th>\r\n                Users\r\n            </th>\r\n            <th>\r\n                Link of rep\r\n            </th>\r\n            {project.map((project) => <ProjectItem project={project} users={users} deleteProject={deleteProject}/>)}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default ProjectList","import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst ProjectItem = ({project, users}) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {project.id}\r\n            </td>\r\n            <td>\r\n                {project.name}\r\n            </td>\r\n            <td>\r\n                {project.users.map((userId) => {\r\n                    let user = users.find((user) => user.id == userId)\r\n                    if (user) {\r\n                        return user.email + ' '\r\n                    }\r\n                })\r\n                }\r\n\r\n            </td>\r\n            <td>\r\n                {project.link_rep}\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst UserProjectList = ({project, users}) => {\r\n    let {id} = useParams();\r\n    let filtered_projects = project.filter((project) => project.users.includes(parseInt(id)));\r\n    return (\r\n        <table>\r\n            <th>\r\n                Id\r\n            </th>\r\n            <th>\r\n                Name\r\n            </th>\r\n            <th>\r\n                Users\r\n            </th>\r\n            <th>\r\n                LinkOfRep\r\n            </th>\r\n            {filtered_projects.map((project) => <ProjectItem project={project} users={users}/>)}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default UserProjectList","import React from 'react'\r\n\r\n\r\nconst TodoItem = ({todo, deleteTodo}) => {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                {todo.id}\r\n            </td>\r\n            <td>\r\n                {todo.project}\r\n            </td>\r\n            <td>\r\n                {todo.user}\r\n            </td>\r\n            <td>\r\n                {todo.text}\r\n            </td>\r\n            <td>\r\n                <button onClick={() => deleteTodo(todo.id)} type='button'>Delete</button>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst TodoList = ({todo, deleteTodo}) => {\r\n    return (\r\n        <table>\r\n            <th>\r\n                Id\r\n            </th>\r\n            <th>\r\n                Project\r\n            </th>\r\n            <th>\r\n                User\r\n            </th>\r\n            <th>\r\n                Text\r\n            </th>\r\n            {todo.map((todo) => <TodoItem todo={todo} deleteTodo={deleteTodo}/>)}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n// import App from \"../App\";\r\n\r\nconst MenuList = ({menu}) => {\r\n    return (\r\n        <table>\r\n            <th>\r\n                <Link to='/'>Users</Link>\r\n            </th>\r\n            <th>\r\n                <Link to='/projects'>Projects</Link>\r\n            </th>\r\n            <th>\r\n                <Link to='/projects/create'>Create project</Link>\r\n            </th>\r\n            <th>\r\n                <Link to='/todo'>Todo</Link>\r\n            </th>\r\n            <th>\r\n                <Link to='/todo/create'>Create todo</Link>\r\n            </th>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default MenuList","import React from 'react'\r\n\r\nconst Footer = ({footer}) => {\r\n    return (\r\n        'Copyright © TheSand. All rights reserved'\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\n//import axios from 'axios'\r\n//import logo from './logo.svg';\r\n//import './App.css';\r\n//import AuthorList from './components/Authors.js'\r\n//import BookList from './components/Books.js'\r\n//import AuthorBooksList from './components/AuthorBooks.js'\r\n//import {HashRouter, BrowserRouter, Route, Link, Switch, Redirect} from 'react-router-dom'\r\n\r\n//const Page404 = ({location}) => {\r\n//    return <div>\r\n//        Page {location.pathname} not found.\r\n//    </div>\r\n//}\r\n\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            'login': '',\r\n            'password': ''\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.get_token(this.state.login, this.state.password);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event)=> this.handleSubmit(event)}>\r\n                <input type=\"text\" name=\"login\" placeholder=\"login\" value={this.state.login} onChange={(event)=>this.handleChange(event)} />\r\n                <input type=\"password\" name=\"password\" placeholder=\"password\" value={this.state.password} onChange={(event)=>this.handleChange(event)} />\r\n                <input type=\"submit\" value=\"Login\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm","import React from 'react'\r\n\r\n\r\nclass ProjectForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            'name': '',\r\n            'users': [],\r\n            'link_rep': ''\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleUserChange(event) {\r\n        if (!event.target.selectedOptions) {\r\n            this.setState({\r\n                'users': []\r\n            })\r\n            return;\r\n        }\r\n\r\n        let users = []\r\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\r\n            users.push(event.target.selectedOptions.item(i).value)\r\n        }\r\n        this.setState({\r\n            'users': users\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.createProject(this.state.name, this.state.users, this.state.link_rep);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                <input type=\"text\" name=\"name\" placeholder=\"name\" value={this.state.name}\r\n                       onChange={(event) => this.handleChange(event)}/>\r\n                <select multiple name=\"users\" onChange={(event) => this.handleUserChange(event)}>\r\n                    {this.props.users.map((users) => <option value={users.id}>{users.username}</option>)}\r\n                </select>\r\n                <input type=\"text\" name=\"link_rep\" placeholder=\"link_rep\" value={this.state.link_rep}\r\n                       onChange={(event) => this.handleChange(event)}/>\r\n                <input type=\"submit\" value=\"Create\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectForm","import React from 'react'\r\n\r\n\r\nclass TodoForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            'text': '',\r\n            'project': '',\r\n            'user': ''\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleUserChange(event) {\r\n        if (!event.target.selectedOptions) {\r\n            this.setState({\r\n                'users': []\r\n            })\r\n            return;\r\n        }\r\n\r\n        let users = []\r\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\r\n            users.push(event.target.selectedOptions.item(i).value)\r\n        }\r\n        this.setState({\r\n            'users': users\r\n        })\r\n    }\r\n\r\n    handleProjectChange(event) {\r\n        if (!event.target.selectedOptions) {\r\n            this.setState({\r\n                'project': []\r\n            })\r\n            return;\r\n        }\r\n\r\n        let project = []\r\n        for (let i = 0; i < event.target.selectedOptions.length; i++) {\r\n            project.push(event.target.selectedOptions.item(i).value)\r\n        }\r\n        this.setState({\r\n            'project': project\r\n        })\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.props.createTodo(this.state.text, this.state.project, this.state.users);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={(event) => this.handleSubmit(event)}>\r\n                <input type=\"text\" name=\"text\" placeholder=\"text\" value={this.state.text}\r\n                       onChange={(event) => this.handleChange(event)}/>\r\n                <select name=\"project\" onChange={(event) => this.handleProjectChange(event)}>\r\n                    {this.props.project.map((project) => <option value={project.id}>{project.name}</option>)}\r\n                </select>\r\n                <select name=\"user\" onChange={(event) => this.handleUserChange(event)}>\r\n                    {this.props.users.map((users) => <option value={users.id}>{users.username}</option>)}\r\n                </select>\r\n                <input type=\"submit\" value=\"Create\"/>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoForm","import React from 'react';\nimport axios from \"axios\";\nimport logo from './logo.svg';\nimport './App.css';\nimport UserList from './components/Users.js'\nimport ProjectList from './components/Project.js'\nimport UserProjectList from './components/UserProject.js'\nimport TodoList from './components/Todo.js'\nimport MenuList from './components/Menu.js'\nimport Footer from './components/Footer.js'\nimport LoginForm from './components/LoginForm'\nimport {HashRouter, BrowserRouter, Route, Link, Switch, Redirect} from 'react-router-dom'\n// import Cookies from 'universal-cookie'\nimport Cookies from \"universal-cookie/lib\";\nimport ProjectForm from \"./components/ProjectForm\";\nimport TodoForm from \"./components/TodoForm\";\n\n\nconst Page404 = ({location}) => {\n    return <div>\n        Page {location.pathname} not found.\n    </div>\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            'users': [],\n            'project': [],\n            'todo': [],\n            'token': ''\n        }\n    }\n\n    is_auth() {\n        return !!this.state.token\n    }\n\n    get_token_from_storage() {\n        const cookie = new Cookies()\n        this.setState({'token': cookie.get('token')}, this.get_data)\n    }\n\n    get_headers() {\n        let header = {\n            'Content-Type': 'application/json',\n            // 'Accept': 'application/json; version=2.0'\n        }\n        const cookie = new Cookies()\n//        cookie.set('token', response.data.token)\n//                console.log(cookie.get('token'))\n\n        header['Authorization'] = 'Token ' + cookie.get('token')\n\n        return header;\n    }\n\n    get_data() {\n        const headers = this.get_headers()\n\n        axios.get('http://127.0.0.1:8000/api/users/', {headers})\n            .then(\n                response => {\n                    const users = response.data\n                    this.setState(\n                        {\n                            'users': response.data.results\n                        })\n                })\n            .catch(\n                error => {\n                    this.setState({\n                        'users': []\n                    })\n                    console.log(error)\n                }\n            )\n\n        axios.get('http://127.0.0.1:8000/api/project/', {headers})\n            .then(\n                response => {\n                    const project = response.data\n                    this.setState(\n                        {\n                            'project': response.data.results\n                        })\n                })\n            .catch(\n                error => {\n                    this.setState({\n                        'project': []\n                    })\n                    console.log(error)\n                }\n            )\n\n        axios.get('http://127.0.0.1:8000/api/todo/', {headers})\n            .then(\n                response => {\n                    const todo = response.data\n\n                    let array_data_is_active = []\n                    for (let i = 0; i < response.data.results.length; i++) {\n                        if (response.data.results[i].is_active == true)\n                            array_data_is_active.push(response.data.results[i])\n                    }\n\n                    this.setState(\n                        {\n                            'todo': array_data_is_active\n                        })\n                })\n            .catch(\n                error => {\n                    this.setState({\n                        'todo': []\n                    })\n                    console.log(error)\n                }\n            )\n    }\n\n    get_token(login, password) {\n        axios.post('http://127.0.0.1:8000/api-token-auth/',\n            {\n                \"username\": login,\n                \"password\": password\n            })\n            .then(\n                response => {\n                    const cookie = new Cookies()\n                    cookie.set('token', response.data.token)\n                    this.setState({'token': response.data.token}, this.get_data)\n//                this.get_data()\n//                console.log(cookie.get('token'))\n                }\n            ).catch(\n            error => console.log(error)\n        )\n    }\n\n    logout() {\n        const cookie = new Cookies()\n        cookie.set('token', '')\n        this.setState({'token': ''}, this.get_data)\n    }\n\n    componentDidMount() {\n        this.get_token_from_storage()\n    }\n\n    // componentDidMount() {\n    //     axios.get('http://127.0.0.1:8000/api/users/')\n    //         .then(\n    //             response => {\n    //                 const users = response.data\n    //                 this.setState(\n    //                     {\n    //                         'users': response.data.results\n    //                     })\n    //             })\n    //         .catch(\n    //             error => console.log(error)\n    //         )\n    //\n    //     axios.get('http://127.0.0.1:8000/api/project/')\n    //         .then(\n    //             response => {\n    //                 const project = response.data\n    //                 this.setState(\n    //                 {\n    //                     'project': response.data.results\n    //                 })\n    //             })\n    //         .catch(\n    //             error => console.log(error)\n    //         )\n    //\n    //     axios.get('http://127.0.0.1:8000/api/todo/')\n    //         .then(\n    //             response => {\n    //                 const todo = response.data\n    //                 this.setState(\n    //                 {\n    //                     'todo': response.data.results\n    //                 })\n    //             })\n    //         .catch(\n    //             error => console.log(error)\n    //         )\n    // }\n\n    deleteProject(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/project/${id}/`, {headers})\n            .then(response => {\n                    // this.setState({project: this.state.project.filter((item) => item.id !== id)}\n                    // )}\n                    this.get_data()\n                }\n            ).catch(error => console.log(error))\n    }\n\n    createProject(name, users, link_rep) {\n\n        if (!name || users.length == 0) {\n            console.log(\"Empty params:\", name, users)\n            return;\n        }\n\n        const headers = this.get_headers()\n        axios.post('http://127.0.0.1:8000/api/project/',\n            {\n                'name': name,\n                'users': users,\n                'link_rep': link_rep\n            },\n            {headers})\n            .then(response => {\n                    this.get_data()\n                }\n            ).catch(error => console.log(error))\n    }\n\n    deleteTodo(id) {\n        const headers = this.get_headers()\n        axios.delete(`http://127.0.0.1:8000/api/todo/${id}/`, {headers})\n            .then(response => {\n                    // this.setState({todo: this.state.todo.filter((item) => item.id !== id)}\n                    // )}\n                    this.get_data()\n                }\n            ).catch(error => console.log(error))\n    }\n\n    createTodo(text, project, user) {\n\n        const headers = this.get_headers()\n        axios.post('http://127.0.0.1:8000/api/todo/',\n            {\n                'text': text,\n                'project': project,\n                'user': user\n            },\n            {headers})\n            .then(response => {\n                    this.get_data()\n            }\n            ).catch(error => console.log(error))\n    }\n\n    render() {\n        return (\n            <div className=\"App-header\">\n\n                <div>\n                    <HashRouter>\n                        {this.is_auth() ? <button onClick={() => this.logout()}>Logout</button> :\n                            <Link to='/login'>Login</Link>}\n                        <MenuList menu={this.menu}/>\n                        <Switch>\n                            <Route exact path='/' component={() => <UserList users={this.state.users}/>}/>\n                            <Route exact path='/projects' component={() => <ProjectList project={this.state.project}\n                                                                                        users={this.state.users}\n                                                                                        deleteProject={(id) => this.deleteProject(id)}/>}/>\n                            <Route exact path='/todo' component={() => <TodoList todo={this.state.todo}\n                                                                                 deleteTodo={(id) => this.deleteTodo(id)}/>}/>\n                            <Route exact path='/login' component={() => <LoginForm\n                                get_token={(login, password) => this.get_token(login, password)}/>}/>\n                            <Route exact path='/projects/create' component={() =>\n                                <ProjectForm\n                                    users={this.state.users}\n                                    createProject={(name, users, link_rep) => this.createProject(name, users, link_rep)}\n                                />}\n                            />\n                            <Route exact path='/todo/create' component={() =>\n                                <TodoForm\n                                    users={this.state.users}\n                                    project={this.state.project}\n                                    createTodo={(text, project, user) => this.createTodo(text, project, user)}\n                                />}\n                            />\n                            <Route path='/user/:id'>\n                                <UserProjectList project={this.state.project} users={this.state.users}/>\n                            </Route>\n                            <Redirect from='/users' to='/'/>\n                            <Route component={Page404}/>\n                        </Switch>\n                    </HashRouter>\n                </div>\n                <div className=\"footer\">\n                    <Footer footer={this.footer}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}